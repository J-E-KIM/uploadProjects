--테이블 생성

-- 회원
CREATE TABLE MEMBERS
(
	-- 회원번호
	MEMBERS_NO NUMBER NOT NULL,
	-- 멤버아이디
	MEMBERS_ID VARCHAR2(50) NOT NULL UNIQUE,
	-- 비밀번호
	MEMBERS_PASS VARCHAR2(50) NOT NULL,
	-- 회원이름
	MEMBERS_NAME VARCHAR2(50) NOT NULL,
	-- 이메일
	MEMBERS_EMAIL VARCHAR2(100) NOT NULL,
    --전화번호
    MEMBERS_PHONE VARCHAR2(30) NOT NULL,
	-- 주소
	MEMBERS_ADDRESS_MAIN VARCHAR2(50),
	-- 상세주소
	MEMBERS_ADDRESS_DETAIL VARCHAR2(160),
	-- 마일리지
	MEMBERS_POINT NUMBER NOT NULL,
	-- 생성 날짜
	MEMBERS_CRE_DATE DATE NOT NULL,
	-- 수정 날짜
	MEMBERS_MOD_DATE DATE,
	--관리자 확인
	MEMBER_IS_ADMIN NUMBER,
	--멤버 상태 활성화(1), 비활성화 (2)
	MEMBERS_STATE NUMBER NOT NULL,
	PRIMARY KEY (MEMBERS_NO)
);

CREATE TABLE BASKET
(
	BASKET_ID NUMBER NOT NULL,
	-- 장바구니 번호
	BASKET_NO NUMBER NOT NULL,
	-- 제품수량
	BASKET_PRODUCT_COUNT NUMBER NOT NULL,
	-- BASKET_TOTAL_PRICE
	BASKET_TOTAL_PRICE NUMBER NOT NULL,
	-- 상품 번호
	PRODUCT_NO NUMBER NOT NULL,
	-- 회원번호
	MEMBERS_NO NUMBER NOT NULL,
	PRIMARY KEY (BASKET_ID)
);

-- 후기 게시판
CREATE TABLE BOARD
(
	-- 게시판 번호
	BOARD_NO NUMBER NOT NULL,
	-- 제목
	BOARD_TITLE VARCHAR2(500) NOT NULL,
	-- 본문
	BOARD_BODY VARCHAR2(4000) NOT NULL,
	-- 생성날짜
	BOARD_CRE_DATE DATE NOT NULL,
	-- 수정 날짜
	BOARD_MOD_DATE DATE NOT NULL,
	-- 회원번호
	MEMBERS_NO NUMBER NOT NULL,
	-- 주문 번호
	ORDERS_NO NUMBER NOT NULL,
	--상품번호
	PRODUCT_NO NUMBER NOT NULL,
	--멤버 상태 활성화(1), 비활성화 (2)
	BOARD_STATE NUMBER NOT NULL,
	PRIMARY KEY (BOARD_NO)
);


-- 게시판 이미지 테이블
CREATE TABLE B_IMAGE
(
	-- 게시판 이미지 NO
	B_IMAGE_NO NUMBER NOT NULL,
	-- 게시판 이미지 원본 파일명
	B_IMAGE_ORGINAL_FILE_NAME VARCHAR2(200) NOT NULL,
	-- 게시판 이미지 디비 저장 이름
	B_IMAGE_STORED_FILE_NAME VARCHAR2(100) NOT NULL UNIQUE,
	-- 게시판 이미지 파일 사이즈
	B_IMAGE_FILE_SIZE NUMBER NOT NULL,
	-- 게시판 이미지 생성 날짜
	B_IMAGE_CRE_DATE DATE NOT NULL,
	-- 게시판 이미지 수정날짜
	B_IMAGE_MOD_DATE DATE NOT NULL,
	-- 게시판 번호
	BOARD_NO NUMBER NOT NULL,
	PRIMARY KEY (B_IMAGE_NO)
);


-- 덧글
CREATE TABLE COMMENTS
(
	-- 덧글 번호
	COMMENTS_NO NUMBER NOT NULL,
	-- 덧글 생성 날짜
	COMMENTS_CRE_DATE DATE NOT NULL,
	-- 덧글 수정 날짜
	COMMENTS_MOD_DATE DATE NOT NULL,
	-- 덧글 내용
	COMMENTS_BODY VARCHAR2(4000) NOT NULL,
	-- 게시판 번호
	BOARD_NO NUMBER NOT NULL,
	-- 회원번호 : 작성자 이름
	MEMBERS_NO NUMBER NOT NULL,
	--덧글 상태 활성화(1), 비활성화 (2)
	COMMENTS_STATE NUMBER NOT NULL,
	PRIMARY KEY (COMMENTS_NO)
);

-- 주문
CREATE TABLE ORDERS
(
	-- 주문 번호
	ORDERS_NO NUMBER NOT NULL,
	-- 주문 일자
	ORDERS_DATE DATE NOT NULL,
	-- 주문 총 금액
	ORDERS_TOTAL_PRICE NUMBER NOT NULL,
	-- 회원번호
	MEMBERS_NO NUMBER NOT NULL,
	--배송요구사항
	ORDERS_REQ VARCHAR2(80),
	PRIMARY KEY (ORDERS_NO)
);

-- 상품
CREATE TABLE PRODUCT
(
	-- 상품 번호
	PRODUCT_NO NUMBER NOT NULL,
	-- 상품ID
	PRODUCT_ID VARCHAR2(100) NOT NULL UNIQUE,
	-- 상품명
	PRODUCT_NAME VARCHAR2(100) NOT NULL,
	-- 상품 가격
	PRODUCT_PRICE NUMBER NOT NULL,
	-- 상품 재고
	PRODUCT_STOCK NUMBER NOT NULL,
	-- 삼품 설명
	PRODUCT_DETAIL VARCHAR2(2000),
	-- 상품 판매량
	PRODUCT_SALES_RATE NUMBER NOT NULL,
	-- 상품등록날짜
	PRODUCT_CRE_DATE DATE NOT NULL,
	--상품 수정날짜
	PRODUCT_MOD_DATE DATE NOT NULL,
	--상품 상태 활성화(1), 비활성화 (2)
	PRODUCT_STATE NUMBER NOT NULL,
	PRIMARY KEY (PRODUCT_NO)
);


-- 새 테이블
CREATE TABLE P_IMAGE
(
	-- 이미지번호
	P_IMAGE_NO NUMBER NOT NULL,
	-- 파일원본이름
	P_IMAGE_ORIGINAL_FILE_NAME VARCHAR2(200) NOT NULL,
	-- DB에 저장된 이름
	P_IMAGE_STORED_FILE_NAME VARCHAR2(50) NOT NULL,
	-- 파일 사이즈
	P_IMAGE_FILE_SIZE NUMBER NOT NULL,
	-- 생성 날짜
	P_IMAGE_CRE_DATE DATE NOT NULL,
	-- 수정 날짜
	P_IMAGE_MOD_DATE DATE NOT NULL,
	-- 상품 번호
	PRODUCT_NO NUMBER NOT NULL,
	PRIMARY KEY (P_IMAGE_NO)
);

--주문 상세
CREATE TABLE ORDERS_DETAIL(
	--주문번호
	ORDERS_NO NUMBER NOT NULL,
	--상품번호
    PRODUCT_NO NUMBER NOT NULL,
	--상품 갯수
	PRODUCT_COUNT NUMBER NOT NULL,
	--리뷰 작성 상태값(완료: 1) (작성 ㄴ:2)
	ORDERS_STATE NUMBER NOT NULL
);

--사용자 포인트(사용가능 금액)
CREATE TABLE M_POINT(
    --포인트 번호
    M_POINT_NO NUMBER NOT NULL,
    --사용자
    MEMBERS_NO NUMBER NOT NULL,
    --포인트 변경금액
    M_POINT_CHANGE NUMBER NOT NULL,
    --포인트 생성일
    M_POINT_CRE_DATE DATE,
    --포인트 수정일
    M_POINT_MOD_DATE DATE,
    
    PRIMARY KEY (MEMBERS_NO)
);


drop table orders_detail;

alter table orders
add product_no number;

alter table orders
add product_count number;

alter table orders
add orders_basket_one number;


alter table orders add constraint  product_no_fk foreign key(product_no)
REFERENCES product(product_no);

create table ORDERREQUEST(
ORDERS_REQ VARCHAR2(80 BYTE) NOT NULL,
orders_basket_one number
);

--각 테이블  외래키 설정

ALTER TABLE ORDERS_DETAIL
	ADD FOREIGN KEY (ORDERS_NO)
	REFERENCES ORDERS(ORDERS_NO);


ALTER TABLE ORDERS_DETAIL
	ADD FOREIGN KEY (PRODUCT_NO)
	REFERENCES PRODUCT(PRODUCT_NO);

ALTER TABLE M_POINT
	ADD FOREIGN KEY (MEMBERS_NO)
	REFERENCES MEMBERS (MEMBERS_NO)
;

ALTER TABLE B_IMAGE
	ADD FOREIGN KEY (BOARD_NO)
	REFERENCES BOARD (BOARD_NO)
;


ALTER TABLE COMMENTS
	ADD FOREIGN KEY (BOARD_NO)
	REFERENCES BOARD (BOARD_NO)
;


ALTER TABLE BASKET
	ADD FOREIGN KEY (MEMBERS_NO)
	REFERENCES MEMBERS (MEMBERS_NO)
;


ALTER TABLE COMMENTS
	ADD FOREIGN KEY (MEMBERS_NO)
	REFERENCES MEMBERS (MEMBERS_NO)
;


ALTER TABLE ORDERS
	ADD FOREIGN KEY (MEMBERS_NO)
	REFERENCES MEMBERS (MEMBERS_NO)
;

ALTER TABLE BOARD
	ADD FOREIGN KEY (MEMBERS_NO)
	REFERENCES MEMBERS(MEMBERS_NO)
;
ALTER TABLE BOARD
	ADD FOREIGN KEY (ORDERS_NO)
	REFERENCES ORDERS(ORDERS_NO)
;
ALTER TABLE BOARD
	ADD FOREIGN KEY (PRODUCT_NO)
	REFERENCES PRODUCT(PRODUCT_NO)
;


ALTER TABLE BASKET
	ADD FOREIGN KEY (PRODUCT_NO)
	REFERENCES PRODUCT (PRODUCT_NO)
;


ALTER TABLE P_IMAGE
	ADD FOREIGN KEY (PRODUCT_NO)
	REFERENCES PRODUCT (PRODUCT_NO)
;

--각 테이블 코멘크
COMMENT ON TABLE BASKET IS '장바구니';
COMMENT ON COLUMN BASKET.BASKET_NO IS '장바구니 번호';
COMMENT ON COLUMN BASKET.BASKET_PRODUCT_COUNT IS '제품수량';
COMMENT ON COLUMN BASKET.BASKET_TOTAL_PRICE IS '제품 금액';
COMMENT ON COLUMN BASKET.PRODUCT_NO IS '상품 번호';
COMMENT ON COLUMN BASKET.MEMBERS_NO IS '회원번호';

COMMENT ON TABLE BOARD IS '후기 게시판';
COMMENT ON COLUMN BOARD.BOARD_NO IS '게시판 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '제목';
COMMENT ON COLUMN BOARD.BOARD_BODY IS '본문';
COMMENT ON COLUMN BOARD.MEMBERS_NO IS '회원번호';
COMMENT ON COLUMN BOARD.ORDERS_NO IS '주문 번호';
COMMENT ON COLUMN BOARD.BOARD_STATE IS '게시판 상태';

COMMENT ON TABLE B_IMAGE IS '게시판 이미지 테이블';
COMMENT ON COLUMN B_IMAGE.B_IMAGE_NO IS '게시판 이미지 NO';
COMMENT ON COLUMN B_IMAGE.B_IMAGE_ORGINAL_FILE_NAME IS '게시판 이미지 원본 파일명';
COMMENT ON COLUMN B_IMAGE.B_IMAGE_STORED_FILE_NAME IS '게시판 이미지 디비 저장 이름';
COMMENT ON COLUMN B_IMAGE.B_IMAGE_FILE_SIZE IS '게시판 이미지 파일 사이즈';
COMMENT ON COLUMN B_IMAGE.B_IMAGE_CRE_DATE IS '게시판 이미지 생성 날짜';
COMMENT ON COLUMN B_IMAGE.B_IMAGE_MOD_DATE IS '게시판 이미지 수정날짜';
COMMENT ON COLUMN B_IMAGE.BOARD_NO IS '게시판 번호';

COMMENT ON TABLE COMMENTS IS '덧글';
COMMENT ON COLUMN COMMENTS.COMMENTS_NO IS '덧글 번호';
COMMENT ON COLUMN COMMENTS.COMMENTS_DATE IS '덧글 생성 날짜';
COMMENT ON COLUMN COMMENTS.COMMENTS_MOD_DATE IS '덧글 수정 날짜';
COMMENT ON COLUMN COMMENTS.COMMENTS_BODY IS '덧글 내용';
COMMENT ON COLUMN COMMENTS.BOARD_NO IS '게시판 번호';
COMMENT ON COLUMN COMMENTS.MEMBERS_NO IS '회원번호 : 작성자 이름';
COMMENT ON COLUMN COMMENTS.COMMENTS_STATE IS '덧글 상태';

COMMENT ON TABLE MEMBERS IS '회원';
COMMENT ON COLUMN MEMBERS.MEMBERS_NO IS '회원번호';
COMMENT ON COLUMN MEMBERS.MEMBERS_ID IS '멤버아이디';
COMMENT ON COLUMN MEMBERS.MEMBERS_PASS IS '비밀번호';
COMMENT ON COLUMN MEMBERS.MEMBERS_NAME IS '회원이름';
COMMENT ON COLUMN MEMBERS.MEMBERS_EMAIL IS '이메일';
COMMENT ON COLUMN MEMBERS.MEMBERS_ADDRESS_MAIN IS '주소';
COMMENT ON COLUMN MEMBERS.MEMBERS_ADDRESS_DETAIL IS '상세주소';
COMMENT ON COLUMN MEMBERS.MEMBERS_POINT IS '포인트';
COMMENT ON COLUMN MEMBERS.MEMBERS_CRE_DATE IS '생성 날짜';
COMMENT ON COLUMN MEMBERS.MEMBERS_MOD_DATE IS '수정 날짜';
COMMENT ON COLUMN MEMBERS.MEMBERS_STATE IS '회원 상태';

COMMENT ON TABLE M_POINT IS '포인트';
COMMENT ON COLUMN M_POINT.M_POINT_NO IS '포인트 번호';
COMMENT ON COLUMN M_POINT.MEMBERS_NO IS '사용자 번호';
COMMENT ON COLUMN M_POINT.M_POINT_CHANGE IS '포인트 변경금액';
COMMENT ON COLUMN M_POINT.M_POINT_CRE_DATE IS '포인트 생성일';
COMMENT ON COLUMN M_POINT.M_POINT_MOD_DATE IS '포인트 수정일';

COMMENT ON TABLE ORDERS IS '주문';
COMMENT ON COLUMN ORDERS.ORDERS_DATE IS '주문 일자';
COMMENT ON COLUMN ORDERS.ORDERS_TOTAL_PRICE IS '주문 총 금액';
COMMENT ON COLUMN ORDERS.MEMBERS_NO IS '회원번호';
COMMENT ON COLUMN ORDERS.ORDERS_REQ IS '요구사항';

COMMENT ON TABLE ORDERS_DETAIL IS '주문내역상세';
COMMENT ON COLUMN ORDERS_DETAIL.ORDERS_NO IS '주문번호';
COMMENT ON COLUMN ORDERS_DETAIL.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN ORDERS_DETAIL.PRODUCT_COUNT IS '상품갯수';
COMMENT ON COLUMN ORDERS_DETAIL.ORDERS_STATE IS '후기 작성 유무'; 

COMMENT ON TABLE PRODUCT IS '상품';
COMMENT ON COLUMN PRODUCT.PRODUCT_NO IS '상품 번호';
COMMENT ON COLUMN PRODUCT.PRODUCT_ID IS '상품ID';
COMMENT ON COLUMN PRODUCT.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.PRODUCT_PRICE IS '상품 가격';
COMMENT ON COLUMN PRODUCT.PRODUCT_STOCK IS '상품 재고';
COMMENT ON COLUMN PRODUCT.PRODUCT_DETAIL IS '삼품 설명';
COMMENT ON COLUMN PRODUCT.PRODUCT_SALES_RATE IS '상품 판매량';
COMMENT ON COLUMN PRODUCT.PRODUCT_CRE_DATE IS '상품등록날짜';
COMMENT ON COLUMN PRODUCT.PRODUCT_MOD_DATE IS '상품수정날짜';
COMMENT ON COLUMN PRODUCT.PRODUCT_STATE IS '상품 상태';

COMMENT ON TABLE P_IMAGE IS '상품 이미지 ';
COMMENT ON COLUMN P_IMAGE.P_IMAGE_NO IS '이미지번호';
COMMENT ON COLUMN P_IMAGE.P_IMAGE_ORIGINAL_FILE_NAME IS '파일원본이름';
COMMENT ON COLUMN P_IMAGE.P_IMAGE_STORED_FILE_NAME IS 'DB에 저장된 이름';
COMMENT ON COLUMN P_IMAGE.P_IMAGE_FILE_SIZE IS '파일 사이즈';
COMMENT ON COLUMN P_IMAGE.P_IMAGE_CRE_DATE IS '생성 날짜';
COMMENT ON COLUMN P_IMAGE.P_IMAGE_MOD_DATE IS '수정 날짜';
COMMENT ON COLUMN P_IMAGE.PRODUCT_NO IS '상품 번호';

COMMENT ON TABLE ORDERREQUEST IS '배송요구';
COMMENT ON COLUMN ORDERREQUEST.ORDERS_REQ IS '배송 요구 사항';
COMMENT ON COLUMN ORDERREQUEST.ORDERS_BASKET_ONE IS '장바구니 분류 번호';


COMMENT ON COLUMN ORDERS.ORDERS_NO IS '주문시퀸스 번호';
COMMENT ON COLUMN ORDERS.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN ORDERS.PRODUCT_COUNT IS '상품 갯수';
COMMENT ON COLUMN ORDERS.ORDERS_BASKET_ONE IS '장바구니 분류 번호';

CREATE SEQUENCE SEQ_M_POINT_M_POINT_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_BASKET_BASKET_ID INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_BOARD_BOARD_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_B_IMAGE_B_IMAGE_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_COMMENTS_COMMENTS_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_MEMBERS_MEMBERS_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_ORDERS_ORDERS_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_P_IMAGE_P_IMAGE_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_PRODUCT_PRODUCT_NO INCREMENT BY 1  START WITH 1;

--회원 가입, 삭제, 수정 (CRUD)

INSERT INTO MEMBERS
VALUE(MEMBERS_ID, MEMBERS_NO, MEMBERS_PASS, MEMBERS_NAME, MEMBERS_EMAIL, 
        MEMBERS_ADDRESS_MAIN, MEMBERS_ADDRESS_DETAIL, MEMBERS_POINT, 
        MEMBERS_PHONE,MEMBERS_CRE_DATE, MEMBERS_MOD_DATE , MEMBERS_STATE )
VALUES(146493044, SEQ_MEMBERS_MEMBERS_NO.NEXTVAL, 1234, '김지은' ,
                'CONSEQUAT@DUICRAS.NET','서울시 강남구', 
            '서초동 서초아파트', '90000','010-8441-2717', SYSDATE , SYSDATE, 1  );

--회원 정보 수정
UPDATE MEMBERS
SET MEMBERS_PASS = 'UIOYU123',
MEMBERS_EMAIL = 'NAV@NAVER.COM',
MEMBERS_PHONE = '010-9563-5688',
MEMBERS_ADDRESS_MAIN = '충주시 뭐뭐구',
MEMBERS_ADDRESS_DETAIL = '충주 아파트 3층'
WHERE MEMBERS_NO = 1
AND MEMBERS_STATE = 1;



-- 상품 추가, 삭제, 수정 
INSERT INTO PRODUCT
VALUE(PRODUCT_NO,PRODUCT_ID,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_STOCK,PRODUCT_DETAIL,
PRODUCT_SALES_RATE,PRODUCT_CRE_DATE, PRODUCT_MOD_DATE, PRODUCT_STATE)
VALUES(SEQ_PRODUCT_PRODUCT_NO.NEXTVAL, 'P123456', '케냐 원두' , 9000, 70, 
            '내요내요내ㅕㅇ냄ㅇ내명내먀ㅕ애ㅣㄴㅇㅁ', 0, SYSDATE , SYSDATE, 1 );

--상품수정
UPDATE PRODUCT
SET PRODUCT_NAME = '상품수정',
PRODUCT_STOCK = 15,
PRODUCT_PRICE = 1200,
PRODUCT_DETAIL = '상품수정 상세정보'
WHERE PRODUCT_NO = 2
AND PRODUCT_STATE = 1;

--상품 삭제
UPDATE PRODUCT
SET PRODUCT_STATE = 2
WHERE PRODUCT_NO = 2;


-- 상품이미지 추가 삭제 수정

INSERT INTO P_IMAGE
VALUE(P_IMAGE_NO, P_IMAGE_ORIGINAL_FILE_NAME, P_IMAGE_STORED_FILE_NAME, 
        P_IMAGE_FILE_SIZE, P_IMAGE_CRE_DATE, P_IMAGE_MOD_DATE, PRODUCT_NO)
VALUES(SEQ_P_IMAGE_P_IMAGE_NO.NEXTVAL, 'PSDAJKLSDAJKL', 'KJKJJK' , 720,
         SYSDATE, SYSDATE ,1);

--상품 이미지 삭제
DELETE FROM P_IMAGE
WHERE PRODUCT_NO = 2;


--장바구니 추가, 삭제, 수정 
INSERT INTO BASKET
VALUE(BASKET_ID, BASKET_NO, PRODUCT_NO, BASKET_PRODUCT_COUNT, BASKET_TOTAL_PRICE,
MEMBERS_NO)
VALUES(SEQ_BASKET_BASKET_ID.NEXTVAL, 1, 3, 3, 72000,
    1);

--주문 추가, 삭제, 수정 
INSERT INTO ORDERS
VALUE(ORDERS_NO, ORDERS_DATE, ORDERS_TOTAL_PRICE,
 MEMBERS_NO, ORDERS_REQ)
VALUES(SEQ_ORDERS_ORDERS_NO.NEXTVAL, SYSDATE, 39000,
 2, '배송시 문자');


 --주문 상세 추가, 삭제, 수정 
INSERT INTO ORDERS_DETAIL 
VALUE(ORDERS_NO, PRODUCT_NO, PRODUCT_COUNT,ORDERS_STATE)
VALUES(3,1,10,1);

--후기 게시글 추가, 삭제, 수정 
INSERT INTO BOARD
VALUE(BOARD_NO, BOARD_TITLE, PRODUCT_NO, BOARD_BODY, MEMBERS_NO,
ORDERS_NO, BOARD_CRE_DATE, BOARD_MOD_DATE, BOARD_STATE)
VALUES(SEQ_BOARD_BOARD_NO.NEXTVAL, '제제목목', 1 , '본문',
  3, 3, SYSDATE, SYSDATE,1);

UPDATE ORDERS_DETAIL
SET ORDERS_STATE = 1
WHERE ORDERS_NO = 3;

--후기 게시판 삭제
--게시판 글, 이미지, 덧글 다 삭제
UPDATE BOARD
SET BOARD_STATE = 2
WHERE ORDERS_NO = 3;

--후기 게시판 수정
UPDATE BOARD
SET BOARD_TITLE = '제목수정', 
	BOARD_BODY =  '본문수정', 
	BOARD_MOD_DATE = SYSDATE
WHERE BOARD_NO = 6;

--후기 게시글 이미지 추가, 삭제, 수정 
INSERT INTO B_IMAGE
VALUE(B_IMAGE_NO, B_IMAGE_ORGINAL_FILE_NAME, B_IMAGE_STORED_FILE_NAME,
B_IMAGE_FILE_SIZE, B_IMAGE_CRE_DATE, B_IMAGE_MOD_DATE, BOARD_NO)
VALUES(SEQ_B_IMAGE_B_IMAGE_NO.NEXTVAL, '제제목목33', '본문33',
  1024, SYSDATE, SYSDATE, 1);


--게시판 덧글 추가, 삭제, 수정 
INSERT INTO COMMENTS
VALUE(COMMENTS_NO, COMMENTS_DATE, COMMENTS_MOD_DATE,
COMMENTS_BODY, BOARD_NO, MEMBERS_NO, COMMENTS_STATE )
VALUES(SEQ_COMMENTS_COMMENTS_NO.NEXTVAL, SYSDATE, SYSDATE,
'충격적 사실',1, 3, 1);

--덧글 수정
UPDATE COMMENTS
SET COMMENTS_BODY = '새로운 덧글',
 COMMENTS_MOD_DATE = SYSDATE
WHERE BOARD_NO = 5 
AND COMMENTS_NO = 5
AND MEMBERS_NO = 3;

--덧글 삭제
UPDATE COMMENTS
SET COMMENTS_STATE = 2;

--포인트 추가, 삭제, 수정 
INSERT INTO M_POINT
VALUE(M_POINT_NO, MEMBERS_NO, M_POINT_CHANGE, M_POINT_CRE_DATE
,M_POINT_MOD_DATE)
VALUES(SEQ_M_POINT_M_POINT_NO.NEXTVAL,1,3000,SYSDATE,SYSDATE);

--포인트 충전
UPDATE MEMBERS
SET MEMBERS_POINT = MEMBERS_POINT + 5000
WHERE MEMBERS_NO = 3;


--아이디 찾기
SELECT MEMBERS_ID
FROM MEMBERS
WHERE MEMBERS_EMAIL = 'CONSEQUAT@DUICRAS.NET'
AND MEMBERS_PHONE = '010-8441-2717'
AND MEMBERS_STATE = 1;

--비밀번호 찾기
SELECT MEMBERS_PASS
FROM MEMBERS
WHERE MEMBERS_ID = '146493044'
AND MEMBERS_EMAIL = 'CONSEQUAT@DUICRAS.NET'
AND MEMBERS_PHONE = '010-8441-2717';
AND MEMBERS_STATE = 1;

--회원 중복방지용 
SELECT MEMBERS_NO, MEMBERS_ID, MEMBERS_NAME
FROM MEMBERS
WHERE MEMBERS_ID = 'ID' OR MEMBERS_PHONE = '010-3665-9996'
AND MEMBERS_STATE = 1;;
--메뉴 전체보기 사용자
--LOW PRICE

SELECT P_I.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
FROM P_IMAGE P_I JOIN PRODUCT PR
ON P_I.PRODUCT_NO = PR.PRODUCT_NO
WHERE PRODUCT_STATE = 1
ORDER BY PR.PRODUCT_PRICE ASC;

--HIGHT PRICE

SELECT P_I.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
FROM P_IMAGE P_I JOIN PRODUCT PR
ON P_I.PRODUCT_NO = PR.PRODUCT_NO
WHERE PRODUCT_STATE = 1
ORDER BY PR.PRODUCT_PRICE DESC;

--메뉴 전체보기 사용자 검색
SELECT P_I.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
FROM P_IMAGE P_I JOIN PRODUCT PR
ON P_I.PRODUCT_NO = PR.PRODUCT_NO
WHERE PRODUCT_STATE = 1
AND PRODUCT_NAME = '상품명'
ORDER BY PR.PRODUCT_PRICE DESC;

--메뉴 전체보기 검색 + 가격순
--LOW PRICE
SELECT PR.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
FROM (SELECT P_I.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
        FROM P_IMAGE P_I JOIN PRODUCT PR
        ON P_I.PRODUCT_NO = PR.PRODUCT_NO
        WHERE PRODUCT_NAME = '상품명')PR
ORDER BY PR.PRODUCT_PRICE ASC;
--HIGHT PRICE
SELECT PR.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
FROM (SELECT P_I.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
        FROM P_IMAGE P_I JOIN PRODUCT PR
        ON P_I.PRODUCT_NO = PR.PRODUCT_NO
        WHERE PRODUCT_NAME = '상품명') PR
ORDER BY PR.PRODUCT_PRICE DESC;


--상품 상세보기
SELECT PRODUCT_NAME, PRODUCT_DETAIL, PRODUCT_STOCK, PRODUCT_PRICE
FROM PRODUCT;

--장바구니
SELECT PR.PRODUCT_NAME, PR.PRODUCT_PRICE, BASKET_PRODUCT_COUNT, 
(PR.PRODUCT_PRICE * BASKET_PRODUCT_COUNT)
FROM BASKET BAS JOIN PRODUCT PR
ON BAS.PRODUCT_NO = PR.PRODUCT_NO
WHERE PR.PRODUCT_STATE = 1;


--결제
--(BASKET 정보 그대로 들고 오면 될...려나?)
UPDATE MEMBERS
SET MEMBERS_POINT = MEMBERS_POINT - 7000
WHERE MEMBERS_NO = 2;

--배송정보 
SELECT MEMBERS_ADDRESS_MAIN , MEMBERS_ADDRESS_DETAIL, MEMBERS_PHONE
FROM MEMBERS;

--주문내역(회원 번호 3번에 대한 구매내역)
--주문번호, 주문내역, 금액, 구매 날짜 

SELECT ORDERS_NO, PRBAS.PRODUCT_NAME ,
    ORDERS_TOTAL_PRICE, TO_CHAR(ORDERS_DATE,'YY.MM.DD'), ORDERS.MEMBERS_NO
FROM ORDERS LEFT OUTER JOIN 
        (SELECT PR.PRODUCT_NAME, BAS.MEMBERS_NO
            FROM BASKET BAS JOIN PRODUCT PR
            ON BAS.PRODUCT_NO = PR.PRODUCT_NO
            WHERE BAS.MEMBERS_NO = 3) PRBAS 
ON ORDERS.MEMBERS_NO = PRBAS.MEMBERS_NO
ORDER BY ORDERS_NO;

--상세주문내역(MNO:3번 사용자의 ORD_NO 3번 주문내역)

SELECT PR.PRODUCT_NAME AS 제품이름, ORDERS_D.PRODUCT_COUNT AS 제품수량,
(PR.PRODUCT_PRICE *ORDERS_D.PRODUCT_COUNT) AS 금액, ORDERS_D.ORDERS_REQ AS 요구사항
FROM PRODUCT PR JOIN (SELECT *
                FROM  ORDERS_DETAIL ORD_D RIGHT OUTER JOIN
                (SELECT M_ORD.ORDERS_NO, M_ORD.ORDERS_REQ
                    FROM  (SELECT ORD.ORDERS_NO, M.MEMBERS_NAME, M.MEMBERS_PHONE, ORD.ORDERS_REQ,
                                     M.MEMBERS_ADDRESS_MAIN, M.MEMBERS_ADDRESS_DETAIL
                                FROM MEMBERS M JOIN ORDERS ORD
                                ON M.MEMBERS_NO = ORD.MEMBERS_NO
                                WHERE M.MEMBERS_NO = 3) M_ORD --MNO 3번의  총 주문내역
                    WHERE M_ORD.ORDERS_NO = 3) M_ORD --MNO 3번의 3번 주문내역
                ON ORD_D.ORDERS_NO = M_ORD.ORDERS_NO)ORDERS_D -- 3번,3번 주문내역의 상세
ON PR.PRODUCT_NO = ORDERS_D.PRODUCT_NO;

--후기게시판
SELECT  B_M.BOARD_NO, B_M.BOARD_TITLE, PR.PRODUCT_NAME, B_M.MEMBERS_NAME, 
        TO_CHAR(B_M.BOARD_CRE_DATE,'YY.MM.DD')
FROM (SELECT B.BOARD_NO, B.BOARD_TITLE, M.MEMBERS_NAME, B.BOARD_CRE_DATE,
        B.PRODUCT_NO
        FROM BOARD B JOIN MEMBERS M
        ON B.MEMBERS_NO = M.MEMBERS_NO
		WHERE B.BOARD_STATE = 1) B_M JOIN PRODUCT PR 
ON B_M.PRODUCT_NO = PR.PRODUCT_NO
ORDER BY BOARD_NO DESC;

--후기게시판 검색
SELECT  B_M.BOARD_NO, B_M.BOARD_TITLE, PR.PRODUCT_NAME, B_M.MEMBERS_NAME, 
        TO_CHAR(B_M.BOARD_CRE_DATE,'YY.MM.DD')
FROM (SELECT B.BOARD_NO, B.BOARD_TITLE, M.MEMBERS_NAME, B.BOARD_CRE_DATE,
        B.PRODUCT_NO
        FROM BOARD B JOIN MEMBERS M
        ON B.MEMBERS_NO = M.MEMBERS_NO
		WHERE B.BOARD_STATE = 1) B_M JOIN PRODUCT PR 
ON B_M.PRODUCT_NO = PR.PRODUCT_NO
WHERE B_M.MEMBERS_NAME = '이름'
ORDER BY BOARD_NO DESC;


--후기게시판 날짜 검색
SELECT  B_M.BOARD_NO, B_M.BOARD_TITLE, PR.PRODUCT_NAME, B_M.MEMBERS_NAME, 
        TO_CHAR(B_M.BOARD_CRE_DATE,'YY.MM.DD')
FROM (SELECT B.BOARD_NO, B.BOARD_TITLE, M.MEMBERS_NAME, B.BOARD_CRE_DATE,
        B.PRODUCT_NO
        FROM BOARD B JOIN MEMBERS M
        ON B.MEMBERS_NO = M.MEMBERS_NO
		WHERE B.BOARD_STATE = 1) B_M JOIN PRODUCT PR 
ON B_M.PRODUCT_NO = PR.PRODUCT_NO
WHERE B_M.BOARD_CRE_DATE >= TO_DATE('2018.11','YY.MM')
AND B_M.BOARD_CRE_DATE <= TO_DATE('2020.01', 'YY.MM')
ORDER BY BOARD_NO DESC;

--후기게시판 날짜 검색
SELECT  B_M.BOARD_NO, B_M.BOARD_TITLE, PR.PRODUCT_NAME, B_M.MEMBERS_NAME, 
        TO_CHAR(B_M.BOARD_CRE_DATE,'YY.MM.DD')
FROM (SELECT B.BOARD_NO, B.BOARD_TITLE, M.MEMBERS_NAME, B.BOARD_CRE_DATE,
        B.PRODUCT_NO
        FROM BOARD B JOIN MEMBERS M
        ON B.MEMBERS_NO = M.MEMBERS_NO
		WHERE B.BOARD_STATE = 1) B_M JOIN PRODUCT PR 
ON B_M.PRODUCT_NO = PR.PRODUCT_NO
WHERE B_M.BOARD_CRE_DATE >= TO_DATE('2018.11','YY.MM')
AND B_M.BOARD_CRE_DATE <= TO_DATE('2020.01', 'YY.MM')
AND B_M.MEMBERS_NAME = '이름'
ORDER BY BOARD_NO DESC;

--후기 게시판 상세
SELECT *
FROM (SELECT B.BOARD_TITLE, B.PRODUCT_NO, B.BOARD_MOD_DATE, B.BOARD_BODY,
        B.MEMBERS_NO, M.MEMBERS_NAME, B.BOARD_NO
        FROM BOARD B JOIN MEMBERS M
        ON B.MEMBERS_NO = M.MEMBERS_NO
        WHERE B.BOARD_NO = 2) BOARD --2번게시글의 글들
JOIN (SELECT M.MEMBERS_NAME, C.COMMENTS_MOD_DATE, C.COMMENTS_BODY, C.BOARD_NO
        FROM COMMENTS C JOIN MEMBERS M
        ON C.MEMBERS_NO = M.MEMBERS_NO
        WHERE C.BOARD_NO = 2
		AND C.COMMENTS_STATE = 1) COMMENTS 
ON BOARD.BOARD_NO = COMMENTS.BOARD_NO
ORDER BY COMMENTS.COMMENTS_MOD_DATE DESC;


--마이페이지
--회원 정보
SELECT MEMBERS_NAME,MEMBERS_PHONE, MEMBERS_EMAIL, 
    MEMBERS_ADDRESS_MAIN || MEMBERS_ADDRESS_DETAIL AS 주소,
    MEMBERS_POINT
FROM MEMBERS;

--포인트 상세내역 사용자
SELECT M_POINT.M_POINT_MOD_DATE, M_POINT.M_POINT_CHANGE,
         M_POINT.M_POINT_CHANGE
FROM MEMBERS MEM JOIN M_POINT M_POINT
ON MEM.MEMBERS_NO = M_POINT.MEMBERS_NO
WHERE MEM.MEMBERS_NO = 3;



--관리자 회원 리스트 보기
SELECT MEMBERS_NO, MEMBERS_NAME, MEMBERS_PHONE, MEMBERS_POINT, MEMBERS_MOD_DATE
FROM MEMBERS
WHERE MEMBERS_STATE = 1
ORDER BY MEMBERS_MOD_DATE DESC;

--관리자 전체 주문내역
SELECT ORD_MEM.ORDERS_NO, PR_ORD.PRODUCT_NAME, ORD_MEM.MEMBERS_NAME,
ORD_MEM.ORDERS_TOTAL_PRICE,TO_CHAR(ORD_MEM.ORDERS_DATE,'YYYY.MM.DD HH:MI:SS ')
FROM 
    (SELECT M.MEMBERS_NAME, ORD.ORDERS_NO,
        ORD.ORDERS_TOTAL_PRICE,ORD.ORDERS_DATE
    FROM MEMBERS M JOIN ORDERS ORD
    ON M.MEMBERS_NO = ORD.MEMBERS_NO)ORD_MEM 
JOIN (SELECT PR.PRODUCT_NAME, ORD_D.ORDERS_NO
        FROM PRODUCT PR  JOIN ORDERS_DETAIL ORD_D
        ON PR.PRODUCT_NO = ORD_D.PRODUCT_NO) PR_ORD
ON PR_ORD.ORDERS_NO = ORD_MEM.ORDERS_NO
ORDER BY ORD_MEM.ORDERS_DATE DESC;

--관리자 전체 주문내역 검색 ID
SELECT ORD_MEM.ORDERS_NO, PR_ORD.PRODUCT_NAME, ORD_MEM.MEMBERS_ID,
ORD_MEM.ORDERS_TOTAL_PRICE,TO_CHAR(ORD_MEM.ORDERS_DATE,'YYYY.MM.DD HH:MI:SS ')
FROM 
    (SELECT M.MEMBERS_ID, ORD.ORDERS_NO,
        ORD.ORDERS_TOTAL_PRICE,ORD.ORDERS_DATE
    FROM MEMBERS M JOIN ORDERS ORD
    ON M.MEMBERS_NO = ORD.MEMBERS_NO)ORD_MEM 
JOIN (SELECT PR.PRODUCT_NAME, ORD_D.ORDERS_NO
        FROM PRODUCT PR  JOIN ORDERS_DETAIL ORD_D
        ON PR.PRODUCT_NO = ORD_D.PRODUCT_NO) PR_ORD
ON PR_ORD.ORDERS_NO = ORD_MEM.ORDERS_NO
where ORD_MEM.MEMBERS_ID = '146928770'
ORDER BY ORD_MEM.ORDERS_DATE DESC;

--관리자 전체 주문내역 검색 날짜
SELECT ORD_MEM.ORDERS_NO, PR_ORD.PRODUCT_NAME, ORD_MEM.MEMBERS_ID,
ORD_MEM.ORDERS_TOTAL_PRICE,TO_CHAR(ORD_MEM.ORDERS_DATE,'YYYY.MM.DD HH:MI:SS ')
FROM 
    (SELECT M.MEMBERS_ID, ORD.ORDERS_NO,
        ORD.ORDERS_TOTAL_PRICE,ORD.ORDERS_DATE
    FROM MEMBERS M JOIN ORDERS ORD
    ON M.MEMBERS_NO = ORD.MEMBERS_NO)ORD_MEM 
JOIN (SELECT PR.PRODUCT_NAME, ORD_D.ORDERS_NO
        FROM PRODUCT PR  JOIN ORDERS_DETAIL ORD_D
        ON PR.PRODUCT_NO = ORD_D.PRODUCT_NO) PR_ORD
ON PR_ORD.ORDERS_NO = ORD_MEM.ORDERS_NO
where to_char(ORD_MEM.ORDERS_DATE,'YY.MM.DD') = to_date(191007,'YY.MM.DD')
ORDER BY ORD_MEM.ORDERS_DATE DESC;

--관리자 특정 사용자 주문내역

--관리자 특정 회원 주문내역
SELECT ORD_MEM.ORDERS_NO, PR.PRODUCT_NAME, ORD_MEM.ORDERS_TOTAL_PRICE, 
        TO_CHAR(ORD_MEM.ORDERS_DATE,'YYYY.MM.DD HH.MI.SS')
FROM (SELECT ORD.ORDERS_NO, ORD.ORDERS_TOTAL_PRICE, ORD.ORDERS_DATE, M.MEMBERS_NO
        FROM MEMBERS M JOIN ORDERS ORD
        ON M.MEMBERS_NO = ORD.MEMBERS_NO) ORD_MEM
JOIN (SELECT ORD_D.ORDERS_NO, PR.PRODUCT_NAME
        FROM ORDERS_DETAIL ORD_D JOIN PRODUCT PR
        ON ORD_D.PRODUCT_NO = PR.PRODUCT_NO) PR
ON ORD_MEM.ORDERS_NO = PR.ORDERS_NO
WHERE ORD_MEM.MEMBERS_NO = 3
ORDER BY ORD_MEM.ORDERS_DATE DESC;

--상품 검색
SELECT P_IM.P_IMAGE_STORED_FILE_NAME, PR.PRODUCT_NAME, PR.PRODUCT_PRICE
FROM PRODUCT PR JOIN P_IMAGE P_IM
ON PR.PRODUCT_NO = P_IM.PRODUCT_NO
WHERE PR.PRODUCT_NAME LIKE '%원두%'
AND PRODUCT_STATE = 1
ORDER BY PR.PRODUCT_CRE_DATE;


--상품 관리 상품 검색
SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_STOCK, 
        PRODUCT_PRICE,PRODUCT_CRE_DATE
FROM PRODUCT
WHERE PRODUCT_NAME LIKE '%원두%'
AND PRODUCT_STATE = 1
ORDER BY PRODUCT_CRE_DATE;


--회원 리스트 검색
--아이디
SELECT MEMBERS_NO, MEMBERS_ID, MEMBERS_PHONE, 
    MEMBERS_POINT,MEMBERS_MOD_DATE
FROM MEMBERS
WHERE MEMBERS_ID LIKE '%홍%'
AND MEMBERS_STATE = 1
ORDER BY MEMBERS_CRE_DATE;

--전화번호
SELECT MEMBERS_NO, MEMBERS_ID, MEMBERS_PHONE, 
    MEMBERS_POINT,MEMBERS_MOD_DATE
FROM MEMBERS
WHERE MEMBERS_PHONE LIKE '%010-2668-5569%'
AND MEMBERS_STATE = 1
ORDER BY MEMBERS_CRE_DATE;

ALTER TABLE basket DROP COLUMN basket_no;

alter table  m_point drop CONSTRAINT SYS_C008394;
alter table  m_point add CONSTRAINT m_point_no_pk primary key(m_point_no);

drop table orders_detail;

alter table orders
add product_no number;

alter table orders
add product_count number;

alter table orders
add orders_basket_one number;


alter table orders add constraint  product_no_fk foreign key(product_no)
REFERENCES product(product_no);

create table ORDERREQUEST(
ORDERS_REQ VARCHAR2(80 BYTE) NOT NULL,
orders_basket_one number
);



COMMENT ON TABLE ORDERREQUEST IS '배송요구';
COMMENT ON COLUMN ORDERREQUEST.ORDERS_REQ IS '배송 요구 사항';
COMMENT ON COLUMN ORDERREQUEST.ORDERS_BASKET_ONE IS '장바구니 분류 번호';


COMMENT ON COLUMN ORDERS.ORDERS_NO IS '주문시퀸스 번호';
COMMENT ON COLUMN ORDERS.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN ORDERS.PRODUCT_COUNT IS '상품 갯수';
COMMENT ON COLUMN ORDERS.ORDERS_BASKET_ONE IS '장바구니 분류 번호';

ALTER TABLE orders
DROP COLUMN ORDERS_REQ;

alter table orders
add order_state number;

ALTER TABLE BASKET
add BASKET_Group number;

create sequence seq_basket_basket_group
start with 1
INCREMENT by 1;

alter table orderrequest
add members_no number;

alter table orderrequest add constraint  members_no_fk foreign key(members_no)
REFERENCES members(members_no);


alter table orders
add orders_group number;

alter table orderrequest
add orders_no number;

alter table orderrequest
drop column orders_req;

alter table orderrequest
add orders_req number;

alter table orderrequest
add orders_address_main varchar(50);

alter table orderrequest
add orders_address_detail varchar(160);

alter table orderrequest
add orders_phone varchar(30);

alter table orderrequest
add orders_request_no number not null;

alter table BASKET
drop column basket_group;

alter table ORDERS
drop column ORDERS_BASKET_ONE;

alter table ORDERREQUEST
drop column ORDERS_BASKET_ONE;

alter table ORDERS
add orders_phone varchar(30);

ALTER TABLE orderrequest
RENAME COLUMN ORDERS_REQ TO REQ_NO;

create table request_detail(
 req_no  number PRIMARY KEY,
 req_detail varchar(100)
);

ALTER TABLE orderrequest ADD CONSTRAINT orders_request_no_pk PRIMARY KEY (orders_request_no);

alter table orderrequest add constraint  orders_no_fk foreign key(orders_no)
REFERENCES orders(orders_no);

alter table orderrequest add constraint  REQ_NO_fk foreign key(REQ_NO)
REFERENCES REQUEST_DETAIL(REQ_NO);


CREATE SEQUENCE SEQ_orders_request_no INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_request_detail_req_no INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_orders_orders_group INCREMENT BY 1 START WITH 1;

alter table product
modify(product_detail varchar2(4000));